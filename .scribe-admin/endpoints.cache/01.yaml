## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Authorization Endpoints'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api_admin/permissions
    metadata:
      groupName: 'Authorization Endpoints'
      groupDescription: ''
      subgroup: Permissions
      subgroupDescription: ''
      title: 'Display a paginated permissions.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: '*/*'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      size:
        name: size
        description: 'The number of items by page.'
        required: false
        example: 20
        type: integer
        custom: []
      search:
        name: search
        description: 'The criteria to search.'
        required: false
        example: 'Editar administradores'
        type: string
        custom: []
    cleanQueryParameters:
      size: 20
      search: 'Editar administradores'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"error":"authentication_error","message":"No autenticado.","status":401}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v6h6Zc3VPak8451dgEDbafe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api_admin/roles
    metadata:
      groupName: 'Authorization Endpoints'
      groupDescription: ''
      subgroup: Roles
      subgroupDescription: ''
      title: 'Display a paginated roles.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: '*/*'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      size:
        name: size
        description: 'The number of elements for listing.'
        required: false
        example: 20
        type: integer
        custom: []
      search:
        name: search
        description: 'The criteria to search in list.'
        required: false
        example: Administrador
        type: string
        custom: []
    cleanQueryParameters:
      size: 20
      search: Administrador
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"error":"authentication_error","message":"No autenticado.","status":401}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a5b6EaPgck1fVhd3e46Z8vD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api_admin/roles
    metadata:
      groupName: 'Authorization Endpoints'
      groupDescription: ''
      subgroup: Roles
      subgroupDescription: ''
      title: 'Store a new role.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: '*/*'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      description:
        name: description
        description: 'The description for this role.'
        required: true
        example: 'Super Admin'
        type: string
        custom: []
      permissions:
        name: permissions
        description: 'The selected permissions names for this role.'
        required: true
        example:
          - libero
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      description: 'Super Admin'
      permissions:
        - libero
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"error":"authentication_error","message":"No autenticado.","status":401}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h4Eca6aD6b5fPZ38ekdvVg1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api_admin/roles/{role_uuid}'
    metadata:
      groupName: 'Authorization Endpoints'
      groupDescription: ''
      subgroup: Roles
      subgroupDescription: ''
      title: 'Display the specified role.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: '*/*'
    urlParameters:
      role_uuid:
        name: role_uuid
        description: 'The role uuid.'
        required: true
        example: 9737af4d-9ab1-3475-98f0-9fa308191da0
        type: string
        custom: []
    cleanUrlParameters:
      role_uuid: 9737af4d-9ab1-3475-98f0-9fa308191da0
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"error":"authentication_error","message":"No autenticado.","status":401}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cf3bkEv6Dg5ha4deaZ8VP16'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api_admin/roles/{role_uuid}'
    metadata:
      groupName: 'Authorization Endpoints'
      groupDescription: ''
      subgroup: Roles
      subgroupDescription: ''
      title: 'Update the specified role.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: '*/*'
    urlParameters:
      role_uuid:
        name: role_uuid
        description: 'The role uuid.'
        required: true
        example: e8ed1761-693a-3008-b1ea-e62223da2557
        type: string
        custom: []
    cleanUrlParameters:
      role_uuid: e8ed1761-693a-3008-b1ea-e62223da2557
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      description:
        name: description
        description: 'The description for this role.'
        required: true
        example: 'Super Admin'
        type: string
        custom: []
      permissions:
        name: permissions
        description: 'The selected permission names for this role.'
        required: true
        example:
          - corporis
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      description: 'Super Admin'
      permissions:
        - corporis
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"error":"authentication_error","message":"No autenticado.","status":401}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VPbc1dfD8hg6Ekv453eaaZ6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api_admin/roles/{role_uuid}'
    metadata:
      groupName: 'Authorization Endpoints'
      groupDescription: ''
      subgroup: Roles
      subgroupDescription: ''
      title: 'Remove the specified role.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: '*/*'
    urlParameters:
      role_uuid:
        name: role_uuid
        description: 'The role uuid.'
        required: true
        example: 2ec41896-3207-3c78-a962-efbecd0f0f95
        type: string
        custom: []
    cleanUrlParameters:
      role_uuid: 2ec41896-3207-3c78-a962-efbecd0f0f95
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"error":"authentication_error","message":"No autenticado.","status":401}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dagEaZD3v56fVP46c81hekb'
    controller: null
    method: null
    route: null
    custom: []
