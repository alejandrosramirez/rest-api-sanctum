name: 'User Endpoints'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: 'User Endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated users.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: '*/*'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      size:
        name: size
        description: 'The number of elements for listing.'
        required: false
        example: 20
        type: integer
        custom: []
      search:
        name: search
        description: 'The criteria to search in list.'
        required: false
        example: alejandrosram@outlook.com
        type: string
        custom: []
    cleanQueryParameters:
      size: 20
      search: alejandrosram@outlook.com
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"current_page":1,"data":[],"first_page_url":"http:\/\/rest-api-sanctum.develop:8080\/api\/users?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/rest-api-sanctum.develop:8080\/api\/users?page=1","links":[{"url":null,"label":"&laquo; Anterior","active":false},{"url":"http:\/\/rest-api-sanctum.develop:8080\/api\/users?page=1","label":"1","active":true},{"url":null,"label":"Siguiente &raquo;","active":false}],"next_page_url":null,"path":"http:\/\/rest-api-sanctum.develop:8080\/api\/users","per_page":20,"prev_page_url":null,"to":null,"total":0}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '50'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 31d4Eav66Pfe8akhgb5VZcD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: 'User Endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: '*/*'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      avatar:
        name: avatar
        description: 'The avatar image for this user.'
        required: false
        example: null
        type: file
        custom: []
      name:
        name: name
        description: 'The name for this user.'
        required: true
        example: Luis
        type: string
        custom: []
      lastname:
        name: lastname
        description: 'The lastname for this user.'
        required: true
        example: Gonzalez
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone for this user.'
        required: true
        example: '3322332233'
        type: string
        custom: []
      email:
        name: email
        description: 'The email for this user.'
        required: true
        example: luis@mail.com
        type: string
        custom: []
      password:
        name: password
        description: 'The password for this user.'
        required: true
        example: '1234567890'
        type: string
        custom: []
      role:
        name: role
        description: 'The roles name for this user.'
        required: true
        example: administrator
        type: string
        custom: []
    cleanBodyParameters:
      name: Luis
      lastname: Gonzalez
      phone: '3322332233'
      email: luis@mail.com
      password: '1234567890'
      role: administrator
    fileParameters:
      avatar: null
    responses:
      -
        status: 500
        content: '{"error":"internal_server_error","message":"Un error de servidor ha ocurrido.","status":500}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '49'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer daPbhZD6851fcg4VvaE3ke6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_uuid}'
    metadata:
      groupName: 'User Endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: '*/*'
    urlParameters:
      user_uuid:
        name: user_uuid
        description: 'The user uuid.'
        required: true
        example: f2b46f05-327c-38a3-a467-4d52d9b6bcf9
        type: string
        custom: []
    cleanUrlParameters:
      user_uuid: f2b46f05-327c-38a3-a467-4d52d9b6bcf9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"model_error","message":"Usuario no encontrado\/a.","status":404}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '48'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bDV6hv3PEkgfa184dZ6c5ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/users/{user_uuid}'
    metadata:
      groupName: 'User Endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: '*/*'
    urlParameters:
      user_uuid:
        name: user_uuid
        description: 'The user uuid.'
        required: true
        example: ea4b774b-2cdd-3feb-b659-92680f49a6c5
        type: string
        custom: []
    cleanUrlParameters:
      user_uuid: ea4b774b-2cdd-3feb-b659-92680f49a6c5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      avatar:
        name: avatar
        description: 'The avatar image for this user.'
        required: false
        example: null
        type: file
        custom: []
      name:
        name: name
        description: 'The name for this user.'
        required: true
        example: Luis
        type: string
        custom: []
      lastname:
        name: lastname
        description: 'The lastname for this user.'
        required: true
        example: Gonzalez
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone for this user.'
        required: true
        example: '3322332233'
        type: string
        custom: []
      email:
        name: email
        description: 'The email for this user.'
        required: true
        example: luis@mail.com
        type: string
        custom: []
      password:
        name: password
        description: 'The password for this user.'
        required: true
        example: '1234567890'
        type: string
        custom: []
      role:
        name: role
        description: 'The roles name for this user.'
        required: true
        example: administrator
        type: string
        custom: []
    cleanBodyParameters:
      name: Luis
      lastname: Gonzalez
      phone: '3322332233'
      email: luis@mail.com
      password: '1234567890'
      role: administrator
    fileParameters:
      avatar: null
    responses:
      -
        status: 404
        content: '{"error":"model_error","message":"Usuario no encontrado\/a.","status":404}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '47'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cvDa6k4gh1b8fd5a36VPEZe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{user_uuid}'
    metadata:
      groupName: 'User Endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: '*/*'
    urlParameters:
      user_uuid:
        name: user_uuid
        description: 'The user uuid.'
        required: true
        example: 861810af-3d50-3181-b29f-038278a08a76
        type: string
        custom: []
    cleanUrlParameters:
      user_uuid: 861810af-3d50-3181-b29f-038278a08a76
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"model_error","message":"Usuario no encontrado\/a.","status":404}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '46'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 864DEPcvkVh5a61eZ3gafdb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/users/{user_uuid}/disable'
    metadata:
      groupName: 'User Endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Disable the specified user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: '*/*'
    urlParameters:
      user_uuid:
        name: user_uuid
        description: 'The user uuid.'
        required: true
        example: 3e52eba6-68ed-3c43-bc93-50b0a6d818d9
        type: string
        custom: []
    cleanUrlParameters:
      user_uuid: 3e52eba6-68ed-3c43-bc93-50b0a6d818d9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"model_error","message":"Usuario no encontrado\/a.","status":404}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '45'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eE1dcP6aZD3vfgbV8h56k4a'
    controller: null
    method: null
    route: null
    custom: []
